#!/usr/bin/env bash

#"INTEL CONFIDENTIAL"
#Copyright 2016 Intel Corporation All Rights Reserved.
#
#The source code contained or described herein and all documents related to the source code ("Material") are owned by Intel Corporation or its suppliers or licensors. Title to the Material remains with Intel Corporation or its suppliers and licensors. The Material contains trade secrets and proprietary and confidential information of Intel or its suppliers and licensors. The Material is protected by worldwide copyright and trade secret laws and treaty provisions. No part of the Material may be used, copied, reproduced, modified, published, uploaded, posted, transmitted, distributed, or disclosed in any way without Intel's prior express written permission.
#
#No license under any patent, copyright, trade secret or other intellectual property right is granted to or conferred upon you by disclosure or delivery of the Materials, either expressly, by implication, inducement, estoppel or otherwise. Any license under such intellectual property rights must be express and approved by Intel in writing.

helpModule () {
  echo "This module runs the full benchmark using the java driver"
  echo
  echo "Options:"
  echo -e "-d\tdatabase to use (default: $BIG_BENCH_DEFAULT_DATABASE)"
  echo -e "-e\tengine to use (default: $BIG_BENCH_DEFAULT_ENGINE)"
  echo -e "-f\tscale factor for data set. -f 1 == 1GB -f 1000 == 1TB (default: $BIG_BENCH_DEFAULT_SCALE_FACTOR)"
  echo -e "-h\tshow this help"
  echo -e "-m\tmap tasks for data generation. A good value is: NUMBER_OF_YARN_CONTAINERS-1 or NUMBER_OF_CLUSTER_VCORES-1. This setting only influences the data generation and has nothing to do with query execution. (default: $BIG_BENCH_DEFAULT_MAP_TASKS)"
  echo -e "-s\tnumber of parallel query streams in THROUGHPUT_TEST benchmark phase (default: $BIG_BENCH_DEFAULT_NUMBER_OF_PARALLEL_STREAMS)"
  echo
  echo -e "-a\tdry-run - pretend command execution but dont actually execute them"
  echo -e "-b\tverbose - print stdout of called bash scripts during execution"
  echo -e "-i\tphases the driver performs (see $BIG_BENCH_CONF_DIR/bigBench.properties for details on format)"
  echo -e "-j\tqueries the driver runs (see $BIG_BENCH_CONF_DIR/bigBench.properties for details on format)"

  if [ "$BIG_BENCH_EXPERT_MODE" -ne 0 ]
  then
    echo
    echo "EXPERT MODE ACTIVE"
    echo
    echo "WARNING-INTERNAL USE ONLY:"
    echo "Only set manually if you know what you are doing!"
    echo -e "-v\tsql script for metastore population (default: $BIG_BENCH_POPULATE_METASTORE_FILE)"
    echo -e "-w\tsql script for metastore refresh (default: $BIG_BENCH_REFRESH_METASTORE_FILE)"
    echo -e "-y\tfile with additional user defined query parameters (global: $BIG_BENCH_QUERY_PARAMS_FILE)"
    echo -e "-z\tfile with additional user defined engine settings (global: $BIG_BENCH_ENGINE_SETTINGS_FILE)"
  fi
}

runModule () {
  #check input parameters
  if [ "$BIG_BENCH_NUMBER_OF_PARALLEL_STREAMS" -le 0 ]
  then
    echo "The number of parallel streams -s must be greater than 0"
    return 1
  fi

  "${BIG_BENCH_BIN_DIR}/bigBench" cleanLogs -U $LIST_OF_USER_OPTIONS
  "$BIG_BENCH_JAVA" -jar "${BIG_BENCH_TOOLS_DIR}/RunBigBench.jar"
  "${BIG_BENCH_BIN_DIR}/bigBench" logEnvInformation -U $LIST_OF_USER_OPTIONS
  "${BIG_BENCH_BIN_DIR}/bigBench" zipLogs -U $LIST_OF_USER_OPTIONS
  return $?
}
